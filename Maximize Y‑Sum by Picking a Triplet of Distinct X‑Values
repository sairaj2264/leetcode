
class Pair implements Comparable<Pair>{
    int num;
    int index;

    public Pair(int num , int index){
        this.num = num;
        this.index = index;
    }

    public int compareTo(Pair othr){
        return othr.num - this.num;
    }
    
    
}

class Solution {
    public int maxSumDistinctTriplet(int[] x, int[] y) {
    
        List<Pair> list1 = new ArrayList<>();

        for(int i = 0 ; i < y.length ; i++){    
            list1.add(new Pair(y[i] , i)); 
        }
        Collections.sort(list1);
        
        Set<Integer> set1 = new HashSet<>();
        int ans = 0;
        int count = 0;
        for(int i = 0 ; i < list1.size() ; i++){
            if(!set1.contains(x[list1.get(i).index])){
                set1.add(x[list1.get(i).index]);
                ans+=list1.get(i).num;
                count++;
            }
            if(count == 3){
                break
                    ;
            }
        }
        if(count < 3) return -1;
        return ans;
        
    }
}
